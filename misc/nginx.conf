worker_processes auto;
user username;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    accept_mutex off;
}

http {
    include mime.types;
    default_type application/octet-stream;
    access_log /file/path/to/logs/directory/access.log;
    error_log  /file/path/to/logs/directory/error.log warn;
    sendfile on;

    # Redirect from old format of deck urls
    map $request_uri $redirect {
        default 0;
        ~*^/decks\?id=(.*)$  /decks/$1;
    }

    server {
        listen 443 ssl; # managed by Certbot
        server_name vdb.im;
        ssl_certificate /etc/letsencrypt/live/vdb.im/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/vdb.im/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/javascript;
        client_max_body_size 4G;
        keepalive_timeout 5;

        root /path/to/vdb/frontend/public;
        index index.html;

        if ($redirect) {
            return 301 $redirect;
        }

        location /index.html {
            add_header Cache-Control "no-cache";
        }

        location / {
            add_header Cache-Control "public, max-age=31536000";
            try_files $uri $uri/ /index.html;
        }


        location ~* \.(png|jpg|gif|ico|svg)$ {
            add_header Cache-Control "public, max-age=31536000";
        }

        location /api {
            proxy_pass http://localhost:5001/api;
        }
    }
    server {
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }
}
